<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">

	<display-name>mblog</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/*.xml</param-value>
	</context-param>

	<listener>
		<listener-class>com.manerfan.blog.listener.H2DBServerListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 页面均使用UTF-8编码 -->
	<!-- response.setCharacterEncoding(this.encoding) -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 防盗链 -->
	<filter>
		<filter-name>AntiTheftLinkFilter</filter-name>
		<filter-class>com.manerfan.blog.filter.AntiTheftLinkFilter</filter-class>
		<init-param> <!-- 白名单 -->
			<param-name>refererWhiteList</param-name>
			<param-value>
                localhost,**.manerfan.**,
                **.baidu.**,**.google.**,**.csdn.**
            </param-value>
		</init-param>
		<init-param> <!-- 需要过滤的资源 -->
			<param-name>filteredResources</param-name>
			<param-value>/image/view/**</param-value>
		</init-param>
		<!-- 如果没有referer，是否允许访问资源  -->
		<init-param>
			<param-name>accessNonReferer</param-name> 
			<param-value>false</param-value>
		</init-param>
	</filter>
	<!-- <filter-mapping>
		<filter-name>AntiTheftLinkFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Hibernate 允许对关联对象、属性进行延迟加载，但是必须保证延迟加载的操作限于同一个 Hibernate Session 范围之内进行。 
		如果 Service 层返回一个启用了延迟加载功能的领域对象给 Web 层，当 Web 层访问到那些需要延迟加载的数据时， 由于加载领域对象的 Hibernate 
		Session 已经关闭，这些导致延迟加载数据的访问异常 -->
	<filter>
		<filter-name>Spring OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<!-- 指定org.springframework.orm.hibernate5.LocalSessionFactoryBean在spring配置文件中的名称,默认值为sessionFactory 
				如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,该参数一定要指定,否则会出现找不到sessionFactory的例外 -->
			<param-name>sessionFactoryBean</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Spring OpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>mblog</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param><!-- 默认WEB-INF/mblog-servlet.xml -->
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/servlet/*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mblog</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<jsp-config>
		<taglib>
			<taglib-uri>c_tld</taglib-uri>
			<taglib-location>/tags/jstl/c.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>fmt_tld</taglib-uri>
			<taglib-location>/tags/jstl/fmt.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>fn_tld</taglib-uri>
			<taglib-location>/tags/jstl/fn.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>spring_tld</taglib-uri>
			<taglib-location>/tags/spring/spring.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>security_tld</taglib-uri>
			<taglib-location>/tags/spring/security.tld</taglib-location>
		</taglib>
	</jsp-config>

	<session-config>
		<session-timeout>60</session-timeout>
		<!-- <cookie-config> <http-only>true</http-only> <secure>true</secure> 
			</cookie-config> -->
		<tracking-mode>COOKIE</tracking-mode><!-- 强制jsessionid存储在cookie中，不出现在url中 -->
	</session-config>

	<security-constraint><!-- 禁用POST GET之外的方法 -->
		<web-resource-collection>
			<web-resource-name>mblog</web-resource-name>
			<url-pattern>/*</url-pattern>
			<http-method>PUT</http-method>
			<http-method>DELETE</http-method>
			<http-method>HEAD</http-method>
			<http-method>OPTIONS</http-method>
			<http-method>TRACE</http-method>
		</web-resource-collection>
	</security-constraint>
</web-app>